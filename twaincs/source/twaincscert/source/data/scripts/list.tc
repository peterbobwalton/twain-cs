;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Opends
;   List all of the TWAIN drivers on the system for the current machine word,
;   returning just the ProductName's...
;
; Arguments
;   arg:1 - if set to full, the entire TW_IDENTITY is displayed
;
; Globals
;   (none)
;
; Locals
;   TW_IDENTITY.ProductName - index of the product name
;
; Returns
;   pass or fail
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; List v1.0 06-Mar-2020
; returns: pass or fail
;
; List all of the TWAIN drivers on the system, returning just the ProductName's...
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Init stuff...
;
setlocal TW_IDENTITY.ProductName 11



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Load and open the DSM...
;
dsmload
dsmentry src null dg_control dat_parent msg_opendsm hwnd
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get the first TWAIN driver...
;
dsmentry src null dg_control dat_identity msg_getfirst '0,0,0,ENGLISH_USA,USA,,0,0,0x0,,,'
if '${sts:}' == 'ENDOFLIST' goto MAIN.CLOSE
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
if '${arg:1}' == 'full' goto MAIN.LISTFULL
echo '${ret:${get:TW_IDENTITY.ProductName}}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get the next TWAIN driver(s)...
;
:MAIN.GETNEXT
dsmentry src null dg_control dat_identity msg_getnext '0,0,0,ENGLISH_USA,USA,,0,0,0x0,,,'
if '${sts:}' == 'ENDOFLIST' goto MAIN.CLOSE
if '${sts:}' != 'SUCCESS' goto MAIN.FAIL
if '${arg:1}' == 'full' goto MAIN.LISTFULL
echo '${ret:${get:TW_IDENTITY.ProductName}}'
goto MAIN.GETNEXT
;
:MAIN.LISTFULL
echo '${ret:}'
goto MAIN.GETNEXT




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Close and unload the DSM...
;
:MAIN.CLOSE
dsmentry src null dg_control dat_parent msg_closedsm hwnd
dsmunload



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bye-bye...
;
echo 'Done...'
return pass



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Bye-bye...
;
:MAIN.FAIL
if '${state:}' < '2' goto MAIN.SKIPCLOSE
dsmentry src null dg_control dat_parent msg_closedsm hwnd
dsmunload
:MAIN.SKIPCLOSE 
echo 'Done...'
return fail

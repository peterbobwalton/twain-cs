;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Opends
;   Open the requested TWAIN driver, with additional dsmload options
;
; Arguments
;   arg:1 - TW_IDENTITY.ProductName of scanner to test
;   arg:2 - set to 'embedded', to limit messages
;   arg:3 - indent padding for embedded
;   arg:4 - dsmoption #1
;   arg:5 - dsmoption #2
;   arg:6 - dsmoption #3
;   arg:7 - dsmoption #4
;   arg:8 - dsmoption #5
;   arg:9 - dsmoption #6
;   arg:10 - dsmoption #7
;   arg:11 - dsmoption #8
;   arg:12 - dsmoption #9
;   arg:13 - dsmoption #10
;   arg:14 - dsmoption #11
;   arg:15 - dsmoption #12
;   arg:16 - dsmoption #13
;
; Globals
;   (none)
;
; Locals
;   embedded - try to fit into the flow of other echo.passfail stuff
;   indent - indenting for echo.passfail
;
; Returns
;   pass or fail
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Initialize...
;
if '${arg:2}' == 'embedded' goto MAIN.TITLE.SKIP
echo.titletest 'Opends'
:MAIN.TITLE.SKIP
setlocal embedded '${arg:2}'
setlocal indent '${arg:3}'
if '${get:TW_ARRAY.ItemType}' != '' goto MAIN.LOADTABLES.SKIP
run '${folder:certification}/LoadTables'
:MAIN.LOADTABLES.SKIP



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Load and open the DSM...
;
setlocal name 'dsmload ${arg:4} ${arg:5} ${arg:6} ${arg:7} ${arg:8} ${arg:9} ${arg:10} ${arg:11} ${arg:12} ${arg:13} ${arg:14} ${arg:15} ${arg:16}'
dsmload '${arg:4}' '${arg:5}' '${arg:6}' '${arg:7}' '${arg:8}' '${arg:9}' '${arg:10}' '${arg:11}' '${arg:12}' '${arg:13}' '${arg:14}' '${arg:15}' '${arg:16}'
dsmentry src null dg_control dat_parent msg_opendsm hwnd
if '${sts:}' != 'SUCCESS' goto MAIN.ERROR
echo.passfail '${get:indent}${get:name}' 'pass'
echo.passfail '${get:indent}using ${dsm:}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; If the DF_APP2|DF_DSM2 flag is set, then call DAT_ENTRYPOINT...
;
if '${app:${get:TW_IDENTITY.SupportedGroups}}' & '0x30000000' != '0x30000000' goto MAIN.ENTRYPOINT.SKIP
setlocal name 'dg_control/dat_entrypoint/msg_get'
dsmentry src null dg_control dat_entrypoint msg_get '0,0,0,0,0,0'
if '${sts:}' != 'SUCCESS' goto MAIN.ERROR
echo.passfail '${get:indent}${get:name}' 'pass'
:MAIN.ENTRYPOINT.SKIP



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Open the driver...
;
setlocal name 'dg_control/dat_identity/msg_opends <${arg:1}>'
dsmentry src null dg_control dat_identity msg_opends '0,0,0,0,0,,0,0,0x0,,,${arg:1}'
if '${sts:}' != 'SUCCESS' goto MAIN.ERROR



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Summary and cleanup...
;
if '${get:embedded}' == 'embedded' goto MAIN.PASS.EMBEDDED
echo.passfail '${get:name}' 'pass'
echo.passfail 'SUMMARY' 'pass'
return 'pass'
;
; Ruh-roh...
:MAIN.ERROR
if '${get:embedded}' == 'embedded' goto MAIN.ERROR.EMBEDDED
echo.passfail '${get:name}' 'fail - ${sts:} '${ret:}'
echo.passfail 'SUMMARY' 'fail'
return 'fail'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Enbedded summary and cleanup...
;
:MAIN.PASS.EMBEDDED
echo.passfail '${get:indent}${get:name}' 'pass'
return 'pass'
;
; Ruh-roh...
:MAIN.ERROR.EMBEDDED
echo.passfail '${get:indent}${get:name}' 'fail - ${sts:} '${ret:}'
return 'fail'

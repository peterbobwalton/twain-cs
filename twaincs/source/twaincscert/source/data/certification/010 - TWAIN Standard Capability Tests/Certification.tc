;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TWAIN Standard Capability Tests
;   Test for capabilties described in the specification.
;
; Arguments
;   arg:1 - TW_IDENTITY.ProductName of scanner to test
;   arg:2 - global to set on fail
;
; Globals
;   (none)
;
; Locals
;   twidentity.productname - product name of scanner to test
;   certifyresult - global to set on fail
;
; Returns
;   (none)
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Initialize stuff, load tables if not already done for us...
;
echo.titlesuite 'TWAIN Standard Capability Tests v1.0 23-Feb-2020'
setlocal twidentity.productname '${arg:1}'
setlocal certifyresult '${arg:2}'
if '${get:TW_ARRAY.ItemType}' != '' goto MAIN.LOADTABLES.SKIP
run '${folder:certification}/LoadTables'
:MAIN.LOADTABLES.SKIP



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Run the tests...
;
call CERTIFY '${folder:certification}/Opends'  '${get:twidentity.productname}' '${get:certifyresult}'
if '${get:${get:certifyresult}}' == 'fail' goto MAIN.CLOSEDS
call CERTIFY 'CAP_SUPPORTEDCAPS'               '${get:twidentity.productname}' '${get:certifyresult}'
call CERTIFY 'ICAP_PIXELTYPE'                  '${get:twidentity.productname}' '${get:certifyresult}'
call CERTIFY 'ICAP_XFERMECH'                   '${get:twidentity.productname}' '${get:certifyresult}'
call CERTIFY 'DAT_CAPABILITY'                  '${get:twidentity.productname}' '${get:certifyresult}'
:MAIN.CLOSEDS
call CERTIFY '${folder:certification}/Closeds' '${get:twidentity.productname}' '${get:certifyresult}'
return



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Function: Certify
; arg:1 - script to run
; arg:2 - TW_IDENTITY.ProductName of scanner to test
; arg:3 - global value to update on fail
; returns: (none)
;
:CERTIFY
;
run '${arg:1}' '${arg:2}'
if '${ret:}' != 'pass' goto CERTIFY.FAIL
return 'pass'
;
:CERTIFY.FAIL
setglobal '${arg:3}' 'fail'
return 'fail'

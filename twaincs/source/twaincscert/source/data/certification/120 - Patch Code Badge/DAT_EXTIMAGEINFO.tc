;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; DAT_EXTIMAGEINFO
;   Check the return values from DAT_EXTIMAGEINFO to make sure the patch code
;   metadata is properly reported.
;
;   Here's the basic flow:
;       DAT_EXTIMAGEINFO
;       confirm that we have TWEI_PATCHCODE
;       confirm a sheet with no patchcodes
;           TW_INFO[0].ReturnCode values TWRC_DATANOTAVAILABLE
;       confirm a sheet with one patch code
;           all TW_INFO[0].ReturnCode values are TWRC_SUCCESS
;           all TW_INFO[0].ItemType values match the spec
;           all TW_INFO[0].NumItems equals 1
;           all TW_INFO[0].Item handle contains one of the TWPCH_* values
;
;   The test passes if:
;       - g_patchcodecount.none >= 1
;         and (g_patchcodecount.one >= 1)
;
; Arguments
;   arg:1 - indent the passfail text
;   arg:2 - base filename (no extension)
;
; Globals
;   g_patchcodecount.none - increment if no patchcodes are found
;   g_patchcodecount.one - increment if one patchcodes is found
;
; Locals
;   patchcodecount - the number of patchcodes found on the image
;   patchcodedata - the return value from DAT_EXTIMAGEINFO
;   name - current test being done
;   indent - indent the passfail text
;   twinfo.infoid.index - index to TW_INFO[n].infoid from the start of patchcodedata
;   twinfo.itemtype.index - index to TW_INFO[n].itemtype from the start of patchcodedata
;   twinfo.numitems.index - index to TW_INFO[n].numitems from the start of patchcodedata
;   twinfo.returncode.index - index to TW_INFO[n].returncode from the start of patchcodedata
;   twinfo.item.index - index to TW_INFO[n].item from the start of patchcodedata
;
; Returns
;   pass/fail
;



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Get the extended image info, save the data to 'patchcodedata'.
;
setlocal indent '${arg:1}    '
setlocal name 'dg_image/dat_extimageinfo/msg_get TWEI_PATCHCODE'
dsmentry src ds dg_image dat_extimageinfo msg_get '1,TWEI_PATCHCODE,0,0,0,0'
if '${sts:}' != 'SUCCESS' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:indent}${get:name}' 'pass'
setlocal patchcodedata '${ret:}'
filewrite '${arg:2}_extimageinfo.txt' '${get:patchcodedata}'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Confirm that we got back all the patch code extimageinfo data...
;
setlocal name 'Found TWEI_PATCHCODE'
if ',${get:patchcodedata},' !contains 'TWEI_PATCHCODE' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:indent}${get:name}' 'pass'



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Start validating the contents of TWEI_PATCHCODE, which is TW_INFO[0],
; we expect to find the correct id and either TWRC_SUCCESS or TWRC_DATANOTAVAILABLE...
setlocal name 'TW_INFO[0].InfoID is TWEI_PATCHCODE'
if '${getindex:patchcodedata:${get:TW_INFO.InfoID}}' != 'TWEI_PATCHCODE' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:indent}${get:name}' 'pass'
;
setlocal name 'TW_INFO[0].ReturnCode is TWRC_SUCCESS or TWRC_DATANOTAVAILABLE'
if '${getindex:patchcodedata:${get:TW_INFO.ReturnCode}}' == 'TWRC_SUCCESS' goto MAIN.TWINFO.SUCCESS
if '${getindex:patchcodedata:${get:TW_INFO.ReturnCode}}' == 'TWRC_DATANOTAVAILABLE' goto MAIN.TWINFO.NODATAFOUND
goto MAIN.ERROR.ECHOPASSFAIL



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Process TWRC_SUCCESS...
;
:MAIN.TWINFO.SUCCESS
setlocal name 'TW_INFO[0].ReturnCode is TWRC_SUCCESS'
echo.passfail '${get:indent}${get:name}' 'pass'
;
setlocal name 'TW_INFO[0].ItemType is TWTY_UINT16'
if '${getindex:patchcodedata:${get:TW_INFO.ItemType}}' != 'TWTY_UINT16' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:indent}${get:name}' 'pass'
;
setlocal name 'TW_INFO[0].NumItems is 1'
if '${getindex:patchcodedata:${get:TW_INFO.NumItems}}' != '1' goto MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:indent}${get:name}' 'pass'
;
;
setlocal tweipatchcode '${gettwei:TWEI_PATCHCODE:${getindex:patchcodedata:${get:TW_INFO.Item}}}'
setlocal name 'TW_INFO[0].Item is a TWPCH_PATCH1 value'
if '${get:tweipatchcode}' == 'TWPCH_PATCH1' goto MAIN.TWINFO.SUCCESS.INCREMENT
setlocal name 'TW_INFO[0].Item is a TWPCH_PATCH2 value'
if '${get:tweipatchcode}' == 'TWPCH_PATCH2' goto MAIN.TWINFO.SUCCESS.INCREMENT
setlocal name 'TW_INFO[0].Item is a TWPCH_PATCH3 value'
if '${get:tweipatchcode}' == 'TWPCH_PATCH3' goto MAIN.TWINFO.SUCCESS.INCREMENT
setlocal name 'TW_INFO[0].Item is a TWPCH_PATCH4 value'
if '${get:tweipatchcode}' == 'TWPCH_PATCH4' goto MAIN.TWINFO.SUCCESS.INCREMENT
setlocal name 'TW_INFO[0].Item is a TWPCH_PATCH6 value'
if '${get:tweipatchcode}' == 'TWPCH_PATCH6' goto MAIN.TWINFO.SUCCESS.INCREMENT
setlocal name 'TW_INFO[0].Item is a TWPCH_PATCHT value'
if '${get:tweipatchcode}' == 'TWPCH_PATCHT' goto MAIN.TWINFO.SUCCESS.INCREMENT
setlocal name 'TW_INFO[0].Item is an unrecognized ${getindex:patchcodedata:${get:TW_INFO.Item}} value'
goto MAIN.ERROR.ECHOPASSFAIL
;
:MAIN.TWINFO.SUCCESS.INCREMENT
echo.passfail '${get:indent}${get:name}' 'pass'
increment g_patchcodecount.one ${get:g_patchcodecount.one} 1
goto MAIN.PASS



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Process TWRC_DATANOTAVAILABLE...
;
:MAIN.TWINFO.NODATAFOUND
setlocal name 'TW_INFO[0].ReturnCode is TWRC_DATANOTAVAILABLE'
echo.passfail '${get:indent}${get:name}' 'pass'
;
increment g_patchcodecount.none ${get:g_patchcodecount.none} 1
goto MAIN.PASS



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Summary and cleanup...
;
; We passed...
:MAIN.PASS
return 'pass'
;
; Ruh-roh...
:MAIN.ERROR.ECHOPASSFAIL
echo.passfail '${get:indent}${get:name}' 'fail - ${sts:} ${ret:}'
return 'fail'
